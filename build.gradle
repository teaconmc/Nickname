import java.time.Instant
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit

buildscript {
    repositories {
        // maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = 'https://maven.covertdragon.team/repository/internal' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.2.5'
group = 'org.teacon'
archivesBaseName = 'Nickname-Forge-1.15'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                nickname {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run_server')
            property 'forge.logging.console.level', 'info'
            mods {
                nickname {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            args '--mod', 'nickname', '--all', '--output', file('src/generated/resources/')
            mods {
                nickname {
                    source sourceSets.main
                }
            }
        }
    }
}

allprojects {
    repositories {
        maven {
            url = 'https://maven.covertdragon.team/repository/internal'
        }
        mavenCentral()
        jcenter()
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.0'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Nickname",
            "Specification-Vendor": "TeaConMC",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor": "TeaConMC",
            "Implementation-Timestamp": DateTimeFormatter.ISO_INSTANT.format(Instant.now().truncatedTo(ChronoUnit.SECONDS))
        ])
    }
}

// Maven publish
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        release(MavenPublication) {
            groupId = "org.teacon"
            artifactId = "Nickname-Forge-1.16"

            artifact reobfArtifact
            pom {
                name = 'Nickname for Minecraft 1.16'
                description = 'Minecraft mod that adds a /nick command, allowing changing display name.'
                licenses {
                    license {
                        name = 'BSD-3-Clause'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "archive"
            url = "https://maven.hub.tritusk.info/releases"
            credentials {
                username = System.env.MAVEN_USERNAME
                password = System.env.MAVEN_PASSWORD
            }
        }
    }
}

tasks.withType(PublishToMavenRepository) {
    onlyIf {
        System.env.MAVEN_USERNAME && System.env.MAVEN_PASSWORD
    }
}

/**
 * A simple task to pass down the artifact name and path to other GitHub actions.
 */
task("githubActionOutput") {
    onlyIf {
        System.env.GITHUB_ACTIONS
    }
    doLast {
        println "::set-output name=artifact_path::$buildDir/reobfJar/output.jar"
        println "::set-output name=artifact_name::$archivesBaseName-${version}.jar"
    }
}
